Resources:
  # EC2
  Server:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [ RegionMap, !Ref AWS::Region, AMI ]
      InstanceType: t2.micro
      KeyName: !GetAtt NetworkStack.Outputs.KeyPair
      IamInstanceProfile: !Ref InstanceProfile
      NetworkInterfaces:
        - SubnetId: !GetAtt NetworkStack.Outputs.SubnetA
          AssociatePublicIpAddress: true
          DeviceIndex: 0
          GroupSet: 
            - !GetAtt NetworkStack.Outputs.SecurityGroup
      # UserData:
      #   Fn::Base64: !Sub | 
      #     #!/bin/sh
      #     sudo su << EOF
      #     yum update -y
      #     yum install httpd -y
      #     yum install httpd-devel -y
      #     yum install python3-pip -y
      #     yum install python3-devel -y
      #     pip install mod_wsgi
      #     mod_wsgi-express install-module | head -n 1 > "/etc/httpd/conf.modules.d/02-wsgi.conf"
      #     EOF
      Tags: 
        - { Key: Name, Value: fotd-deploy }
  # Roles
  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: FotdRoleForCodeDeploy
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: FotdRoleForEC2
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: FotdRoleForEC2
      Roles:
        - !Ref InstanceRole
  # Misc.
  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "./network.yaml"
  DynamodbStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "./dynamodb.yaml"
  
Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-06b09bfacae1453cb
    us-east-2:
      AMI: ami-01107263728f3bef4